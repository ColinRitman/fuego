name: Windows

on:
  push:
    tags:
      - "*"

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2019
    env:
      BOOST_ROOT: C:\local\boost_1_83_0
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Restore Boost
        uses: actions/cache@v3
        id: restore-boost
        with:
          path: ${{env.BOOST_ROOT}}
          key: boost_1_83_0-msvc-14.2-64
        
      - name: Download and Extract Boost
        if: steps.restore-boost.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://boostorg.jfrog.io/artifactory/main/release/1.83.0/source/boost_1_83_0.zip" -OutFile "boost_1_83_0.zip"
          # Verify zip is not corrupted
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          try {
            [System.IO.Compression.ZipFile]::OpenRead("boost_1_83_0.zip").Dispose()
          } catch {
            Write-Host "Downloaded Boost zip is corrupted."
            exit 1
          }
          Expand-Archive -Path "boost_1_83_0.zip" -DestinationPath "C:\local"
          Rename-Item "C:\local\boost_1_83_0" "C:\local\boost_1_83_0" -Force

      - name: Build
        shell: powershell
        id: build
        run: |
          $build_folder = "build"
          $xfg_ver = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "fuego-cli-win64-v$xfg_ver"
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -G "Visual Studio 17 2022" ..
          msbuild fuegoX.sln /p:Configuration=Release /m
          cd src\Release
          Compress-Archive -Path *.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "./$build_folder/src/Release/$release_name.zip"
          mkdir "$release_name"
          cp *.exe "$release_name/"
          echo "sha256=${sha256}" >> $env:GITHUB_OUTPUT
          echo "release_name=${release_name}.zip" >> $env:GITHUB_OUTPUT
          echo "asset_path=${asset_path}" >> $env:GITHUB_OUTPUT
          echo "xfg_version=${xfg_version}" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Fuego CLI Suite v${{ steps.build.outputs.xfg_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
